#!/usr/bin/python3

import slr
import sys
import stack

#file_name = sys.argv[1]
file_name = 'sample.txt'
open_file = open(file_name, 'r')
result_file = open("{}_result.txt".format(file_name), 'w')

input_text = open_file.readlines()
input_buffer = []
parser_stack = stack.Stack()

for i in input_text:
    j = 0
    while i[j] != ' ':
        j += 1

    input_buffer.append(i[:j].lower())
#
#
# input_buffer.append('$')
# buffer_index = 0
# parser_stack.push(0)
#
#
# while 1:
#     token = input_buffer[buffer_index]
#
#     try:
#         if slr.ACTION[int(parser_stack.peek()), token][0] == 's':
#             temp = parser_stack.peek()
#             parser_stack.push(token)
#             parser_stack.push(slr.ACTION[int(temp), token][1:])
#             buffer_index += 1
#
#         elif slr.ACTION[int(parser_stack.peek()), token][0] == 'r':
#             rule = slr.ACTION[int(parser_stack.peek()), token][1:]
#             rule_first = slr.GRAMMAR[int(rule)][0]
#             reduce_rule = slr.GRAMMAR[int(rule)][1]
#
#             if len(reduce_rule) != 0:
#                 for i in range(len(reduce_rule)):
#                     parser_stack.pop()
#                     parser_stack.pop()
#             # 아무튼 팝 함
#             goto_1 = int(parser_stack.peek())
#             parser_stack.push(rule_first)
#             # 뺀 거 reduce한거 다시 넣음
#             parser_stack.push(slr.GOTO[goto_1, rule_first])
#
#         elif slr.ACTION[int(parser_stack.peek()), token] == 'acc':
#             result_file.write('acc')
#             break
#
#     except:
#         result_file.write('reject\n')
#         result_file.write('(' + parser_stack.peek() + ',' + token + ') 은 table에 없습니다.\n')
#         break
#
